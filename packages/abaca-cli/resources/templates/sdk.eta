// Do not edit, this file was auto-generated (Abaca <%= it.version %>)

const DEFAULT_ACCEPT = <%= JSON.stringify(it.defaultAccept) %>;

const DEFAULT_CONTENT_TYPE = <%= JSON.stringify(it.defaultContentType) %>;

<%~ include("./preamble.gen.eta") %>

<%= it.typeSource %>

const allOperations = <%= JSON.stringify(it.operations, null, 2) %> as const;

export type {operations as Operations};

export type Schemas = components['schemas'];

export type Schema<K extends keyof Schemas> = Schemas[K];

type RequestBodyFor<
  O extends OperationType,
  M extends BodyMimeTypes<O> = BodyMimeTypes<O>,
> = Lookup<Lookup<Lookup<O, 'requestBody'>, 'content'>, M, never>;

type RequestParametersFor<O extends OperationType> = Lookup<
  O['parameters'],
  'path',
  {}
> &
  Lookup<O['parameters'], 'query', {}> &
  Lookup<O['parameters'], 'headers', {}>;

type ResponseBodyFor<
  O extends OperationType,
  C extends keyof O['responses'],
  M extends ResponseMimeTypes<O['responses'], C> = ResponseMimeTypes<
    O['responses'],
    C
  >,
> = Get<Lookup<O['responses'][C], 'content'>, M>;

export type RequestBody<
  K extends keyof operations,
  M extends BodyMimeTypes<operations[K]> = BodyMimeTypes<operations[K]>
> = RequestBodyFor<operations[K], M>;

export type RequestParameters<
  K extends keyof operations
> = RequestParametersFor<operations[K]>;

export type ResponseBody<
  K extends keyof operations,
  C extends keyof operations[K]['responses'] = keyof operations[K]['responses'],
  M extends ResponseMimeTypes<operations[K]['responses'], C> = ResponseMimeTypes<operations[K]['responses'], C>
> = ResponseBodyFor<operations[K], C, M>;

export type Sdk<F extends BaseFetch = BaseFetch> = SdkFor<operations, F>;

<% if (it.defaultAddress || it.serverAddresses.length) { %>
<%~ include("./smart-factory.eta", it) %>
<% } else { %>
<%~ include("./default-factory.eta") %>
<% } %>
