export const serverAddresses = <%= JSON.stringify(it.serverAddresses, null, 2) %> as const;

type Optional<T, K extends keyof T> = Pick<Partial<T>, K> & Omit<T, K>;

export type SdkConfig<
  F extends BaseFetch = typeof fetch
> = Optional<SdkConfigFor<operations, F>, 'address'>;

export function createSdk<
  F extends BaseFetch = typeof fetch
>(arg?: Address | SdkConfig<F>): Sdk<F> {
  const config =
    typeof arg == 'string' || arg instanceof URL || (arg && 'port' in arg)
      ? {address: arg}
      : {address: <%= JSON.stringify(it.defaultAddress || it.serverAddresses[0]) %>, ...arg};
  return createSdkFor<operations, F>(allOperations, config);
}
